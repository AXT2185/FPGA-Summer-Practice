-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    src_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    src_TVALID : IN STD_LOGIC;
    src_TREADY : OUT STD_LOGIC;
    src_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    dst_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_TVALID : OUT STD_LOGIC;
    dst_TREADY : IN STD_LOGIC;
    dst_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of sobel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sobel_sobel,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.648000,HLS_SYN_LAT=235367,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=851,HLS_SYN_LUT=1658,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal rows : STD_LOGIC_VECTOR (31 downto 0);
    signal cols : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_read_reg_709 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_read_reg_716 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_fu_463_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_reg_753 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal top_V_1_fu_522_p6 : STD_LOGIC_VECTOR (1 downto 0);
    signal top_V_1_reg_761 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln1027_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mid_V_1_fu_536_p6 : STD_LOGIC_VECTOR (1 downto 0);
    signal mid_V_1_reg_766 : STD_LOGIC_VECTOR (1 downto 0);
    signal btm_V_1_fu_550_p6 : STD_LOGIC_VECTOR (1 downto 0);
    signal btm_V_1_reg_771 : STD_LOGIC_VECTOR (1 downto 0);
    signal cmp_i_i120_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i120_reg_776 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i78_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i78_reg_781 : STD_LOGIC_VECTOR (0 downto 0);
    signal LineBuffer_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuffer_ce0 : STD_LOGIC;
    signal LineBuffer_we0 : STD_LOGIC;
    signal LineBuffer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal LineBuffer_ce1 : STD_LOGIC;
    signal LineBuffer_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal LineBuffer_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuffer_1_ce0 : STD_LOGIC;
    signal LineBuffer_1_we0 : STD_LOGIC;
    signal LineBuffer_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal LineBuffer_1_ce1 : STD_LOGIC;
    signal LineBuffer_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal LineBuffer_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_1_fu_366_ap_start : STD_LOGIC;
    signal grp_sobel_Pipeline_1_fu_366_ap_done : STD_LOGIC;
    signal grp_sobel_Pipeline_1_fu_366_ap_idle : STD_LOGIC;
    signal grp_sobel_Pipeline_1_fu_366_ap_ready : STD_LOGIC;
    signal grp_sobel_Pipeline_1_fu_366_WindowBuffer_5_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_1_fu_366_WindowBuffer_5_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_1_fu_366_WindowBuffer_4_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_1_fu_366_WindowBuffer_4_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_1_fu_366_WindowBuffer_3_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_1_fu_366_WindowBuffer_3_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_1_fu_366_WindowBuffer_2_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_1_fu_366_WindowBuffer_2_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_1_fu_366_WindowBuffer_1_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_1_fu_366_WindowBuffer_1_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_1_fu_366_WindowBuffer_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_1_fu_366_WindowBuffer_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_start : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_done : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_idle : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_ready : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_ce0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_we0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_ce0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_we0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_src_TREADY : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_data_p_keep_V_1_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_data_p_keep_V_1_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_data_p_strb_V_1_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_data_p_strb_V_1_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_start : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_done : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_idle : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_ready : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TVALID : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TREADY : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_src_TREADY : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_ce0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_we0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_ce1 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_ce0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_we0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_ce1 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_ce0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_we0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_ce1 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_33_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_33_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_35_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_35_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_31_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_31_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_34_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_34_out_o_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_30_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_30_out_o_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_32_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_32_out_o_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_data_p_keep_V_3_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_data_p_keep_V_3_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_data_p_strb_V_3_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_data_p_strb_V_3_out_ap_vld : STD_LOGIC;
    signal data_p_keep_V_2_reg_178 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal data_p_strb_V_2_reg_188 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_WindowBuffer_14_phi_fu_201_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_WindowBuffer_13_phi_fu_213_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_WindowBuffer_12_phi_fu_225_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_WindowBuffer_17_phi_fu_237_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_WindowBuffer_16_phi_fu_252_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_WindowBuffer_15_phi_fu_267_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_20_reg_279 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_19_reg_292 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_18_reg_305 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_23_reg_318 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_22_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_21_reg_350 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_1_fu_366_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal WindowBuffer_5_fu_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal WindowBuffer_4_fu_130 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_3_fu_126 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_2_fu_122 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_1_fu_118 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_fu_114 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_start_reg : STD_LOGIC := '0';
    signal grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal data_p_keep_V_3_loc_fu_142 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_p_strb_V_3_loc_fu_138 : STD_LOGIC_VECTOR (0 downto 0);
    signal btm_V_fu_94 : STD_LOGIC_VECTOR (1 downto 0);
    signal mid_V_fu_98 : STD_LOGIC_VECTOR (1 downto 0);
    signal top_V_fu_102 : STD_LOGIC_VECTOR (1 downto 0);
    signal lb_r_i_V_fu_106 : STD_LOGIC_VECTOR (1 downto 0);
    signal lb_r_i_V_2_fu_589_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_V_fu_110 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_V_3_fu_597_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1027_fu_501_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lb_r_i_V_1_fu_577_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1019_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal regslice_both_dst_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal regslice_both_src_V_data_V_U_apdone_blk : STD_LOGIC;
    signal src_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal src_TVALID_int_regslice : STD_LOGIC;
    signal src_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_src_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal src_TKEEP_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal src_TSTRB_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_last_V_U_apdone_blk : STD_LOGIC;
    signal src_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_last_V_U_ack_in : STD_LOGIC;
    signal dst_TVALID_int_regslice : STD_LOGIC;
    signal dst_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dst_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sobel_sobel_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        WindowBuffer_5_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_5_out_ap_vld : OUT STD_LOGIC;
        WindowBuffer_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_4_out_ap_vld : OUT STD_LOGIC;
        WindowBuffer_3_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_3_out_ap_vld : OUT STD_LOGIC;
        WindowBuffer_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_2_out_ap_vld : OUT STD_LOGIC;
        WindowBuffer_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_1_out_ap_vld : OUT STD_LOGIC;
        WindowBuffer_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_out_ap_vld : OUT STD_LOGIC );
    end component;


    component sobel_sobel_Pipeline_VITIS_LOOP_84_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_TVALID : IN STD_LOGIC;
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        LineBuffer_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_1_ce0 : OUT STD_LOGIC;
        LineBuffer_1_we0 : OUT STD_LOGIC;
        LineBuffer_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        LineBuffer_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_ce0 : OUT STD_LOGIC;
        LineBuffer_we0 : OUT STD_LOGIC;
        LineBuffer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        src_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        src_TREADY : OUT STD_LOGIC;
        src_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        data_p_keep_V_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_p_keep_V_1_out_ap_vld : OUT STD_LOGIC;
        data_p_strb_V_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_p_strb_V_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component sobel_sobel_Pipeline_VITIS_LOOP_114_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        WindowBuffer_25 : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_26 : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_24 : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_29 : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_27 : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_28 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_p_keep_V_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        data_p_strb_V_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        top_V_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        mid_V_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        btm_V_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        op2_assign : IN STD_LOGIC_VECTOR (31 downto 0);
        cmp_i_i78 : IN STD_LOGIC_VECTOR (0 downto 0);
        dst_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_TVALID : OUT STD_LOGIC;
        dst_TREADY : IN STD_LOGIC;
        dst_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        src_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        src_TVALID : IN STD_LOGIC;
        src_TREADY : OUT STD_LOGIC;
        src_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        LineBuffer_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_2_ce0 : OUT STD_LOGIC;
        LineBuffer_2_we0 : OUT STD_LOGIC;
        LineBuffer_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        LineBuffer_2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_2_ce1 : OUT STD_LOGIC;
        LineBuffer_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        LineBuffer_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_1_ce0 : OUT STD_LOGIC;
        LineBuffer_1_we0 : OUT STD_LOGIC;
        LineBuffer_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        LineBuffer_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_1_ce1 : OUT STD_LOGIC;
        LineBuffer_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        LineBuffer_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_ce0 : OUT STD_LOGIC;
        LineBuffer_we0 : OUT STD_LOGIC;
        LineBuffer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        LineBuffer_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_ce1 : OUT STD_LOGIC;
        LineBuffer_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        cmp_i_i120 : IN STD_LOGIC_VECTOR (0 downto 0);
        WindowBuffer_33_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_33_out_ap_vld : OUT STD_LOGIC;
        WindowBuffer_35_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_35_out_ap_vld : OUT STD_LOGIC;
        WindowBuffer_31_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_31_out_ap_vld : OUT STD_LOGIC;
        WindowBuffer_34_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_34_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_34_out_o_ap_vld : OUT STD_LOGIC;
        WindowBuffer_30_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_30_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_30_out_o_ap_vld : OUT STD_LOGIC;
        WindowBuffer_32_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_32_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_32_out_o_ap_vld : OUT STD_LOGIC;
        data_p_keep_V_3_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_p_keep_V_3_out_ap_vld : OUT STD_LOGIC;
        data_p_strb_V_3_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_p_strb_V_3_out_ap_vld : OUT STD_LOGIC );
    end component;


    component sobel_mux_42_2_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (1 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component sobel_LineBuffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sobel_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        rows : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component sobel_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    LineBuffer_U : component sobel_LineBuffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => LineBuffer_address0,
        ce0 => LineBuffer_ce0,
        we0 => LineBuffer_we0,
        d0 => LineBuffer_d0,
        address1 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_address1,
        ce1 => LineBuffer_ce1,
        q1 => LineBuffer_q1);

    LineBuffer_1_U : component sobel_LineBuffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => LineBuffer_1_address0,
        ce0 => LineBuffer_1_ce0,
        we0 => LineBuffer_1_we0,
        d0 => LineBuffer_1_d0,
        address1 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_address1,
        ce1 => LineBuffer_1_ce1,
        q1 => LineBuffer_1_q1);

    LineBuffer_2_U : component sobel_LineBuffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_address0,
        ce0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_ce0,
        we0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_we0,
        d0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_d0,
        address1 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_address1,
        ce1 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_ce1,
        q1 => LineBuffer_2_q1);

    grp_sobel_Pipeline_1_fu_366 : component sobel_sobel_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sobel_Pipeline_1_fu_366_ap_start,
        ap_done => grp_sobel_Pipeline_1_fu_366_ap_done,
        ap_idle => grp_sobel_Pipeline_1_fu_366_ap_idle,
        ap_ready => grp_sobel_Pipeline_1_fu_366_ap_ready,
        WindowBuffer_5_out => grp_sobel_Pipeline_1_fu_366_WindowBuffer_5_out,
        WindowBuffer_5_out_ap_vld => grp_sobel_Pipeline_1_fu_366_WindowBuffer_5_out_ap_vld,
        WindowBuffer_4_out => grp_sobel_Pipeline_1_fu_366_WindowBuffer_4_out,
        WindowBuffer_4_out_ap_vld => grp_sobel_Pipeline_1_fu_366_WindowBuffer_4_out_ap_vld,
        WindowBuffer_3_out => grp_sobel_Pipeline_1_fu_366_WindowBuffer_3_out,
        WindowBuffer_3_out_ap_vld => grp_sobel_Pipeline_1_fu_366_WindowBuffer_3_out_ap_vld,
        WindowBuffer_2_out => grp_sobel_Pipeline_1_fu_366_WindowBuffer_2_out,
        WindowBuffer_2_out_ap_vld => grp_sobel_Pipeline_1_fu_366_WindowBuffer_2_out_ap_vld,
        WindowBuffer_1_out => grp_sobel_Pipeline_1_fu_366_WindowBuffer_1_out,
        WindowBuffer_1_out_ap_vld => grp_sobel_Pipeline_1_fu_366_WindowBuffer_1_out_ap_vld,
        WindowBuffer_out => grp_sobel_Pipeline_1_fu_366_WindowBuffer_out,
        WindowBuffer_out_ap_vld => grp_sobel_Pipeline_1_fu_366_WindowBuffer_out_ap_vld);

    grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376 : component sobel_sobel_Pipeline_VITIS_LOOP_84_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_start,
        ap_done => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_done,
        ap_idle => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_idle,
        ap_ready => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_ready,
        src_TVALID => src_TVALID_int_regslice,
        cols => cols_read_reg_709,
        LineBuffer_1_address0 => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_address0,
        LineBuffer_1_ce0 => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_ce0,
        LineBuffer_1_we0 => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_we0,
        LineBuffer_1_d0 => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_d0,
        LineBuffer_address0 => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_address0,
        LineBuffer_ce0 => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_ce0,
        LineBuffer_we0 => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_we0,
        LineBuffer_d0 => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_d0,
        src_TDATA => src_TDATA_int_regslice,
        src_TREADY => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_src_TREADY,
        src_TKEEP => src_TKEEP_int_regslice,
        src_TSTRB => src_TSTRB_int_regslice,
        src_TLAST => src_TLAST_int_regslice,
        data_p_keep_V_1_out => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_data_p_keep_V_1_out,
        data_p_keep_V_1_out_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_data_p_keep_V_1_out_ap_vld,
        data_p_strb_V_1_out => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_data_p_strb_V_1_out,
        data_p_strb_V_1_out_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_data_p_strb_V_1_out_ap_vld);

    grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393 : component sobel_sobel_Pipeline_VITIS_LOOP_114_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_start,
        ap_done => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_done,
        ap_idle => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_idle,
        ap_ready => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_ready,
        WindowBuffer_25 => WindowBuffer_19_reg_292,
        WindowBuffer_26 => WindowBuffer_20_reg_279,
        WindowBuffer_24 => WindowBuffer_18_reg_305,
        WindowBuffer_29 => WindowBuffer_23_reg_318,
        WindowBuffer_27 => WindowBuffer_21_reg_350,
        WindowBuffer_28 => WindowBuffer_22_reg_334,
        data_p_keep_V_2 => data_p_keep_V_2_reg_178,
        data_p_strb_V_2 => data_p_strb_V_2_reg_188,
        cols => cols_read_reg_709,
        top_V_1 => top_V_1_reg_761,
        mid_V_1 => mid_V_1_reg_766,
        btm_V_1 => btm_V_1_reg_771,
        op2_assign => op2_assign_reg_753,
        cmp_i_i78 => cmp_i_i78_reg_781,
        dst_TDATA => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TDATA,
        dst_TVALID => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TVALID,
        dst_TREADY => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TREADY,
        dst_TKEEP => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TKEEP,
        dst_TSTRB => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TSTRB,
        dst_TLAST => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TLAST,
        src_TDATA => src_TDATA_int_regslice,
        src_TVALID => src_TVALID_int_regslice,
        src_TREADY => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_src_TREADY,
        src_TKEEP => src_TKEEP_int_regslice,
        src_TSTRB => src_TSTRB_int_regslice,
        src_TLAST => src_TLAST_int_regslice,
        LineBuffer_2_address0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_address0,
        LineBuffer_2_ce0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_ce0,
        LineBuffer_2_we0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_we0,
        LineBuffer_2_d0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_d0,
        LineBuffer_2_address1 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_address1,
        LineBuffer_2_ce1 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_2_ce1,
        LineBuffer_2_q1 => LineBuffer_2_q1,
        LineBuffer_1_address0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_address0,
        LineBuffer_1_ce0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_ce0,
        LineBuffer_1_we0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_we0,
        LineBuffer_1_d0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_d0,
        LineBuffer_1_address1 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_address1,
        LineBuffer_1_ce1 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_ce1,
        LineBuffer_1_q1 => LineBuffer_1_q1,
        LineBuffer_address0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_address0,
        LineBuffer_ce0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_ce0,
        LineBuffer_we0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_we0,
        LineBuffer_d0 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_d0,
        LineBuffer_address1 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_address1,
        LineBuffer_ce1 => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_ce1,
        LineBuffer_q1 => LineBuffer_q1,
        cmp_i_i120 => cmp_i_i120_reg_776,
        WindowBuffer_33_out => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_33_out,
        WindowBuffer_33_out_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_33_out_ap_vld,
        WindowBuffer_35_out => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_35_out,
        WindowBuffer_35_out_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_35_out_ap_vld,
        WindowBuffer_31_out => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_31_out,
        WindowBuffer_31_out_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_31_out_ap_vld,
        WindowBuffer_34_out_i => WindowBuffer_4_fu_130,
        WindowBuffer_34_out_o => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_34_out_o,
        WindowBuffer_34_out_o_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_34_out_o_ap_vld,
        WindowBuffer_30_out_i => WindowBuffer_fu_114,
        WindowBuffer_30_out_o => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_30_out_o,
        WindowBuffer_30_out_o_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_30_out_o_ap_vld,
        WindowBuffer_32_out_i => WindowBuffer_2_fu_122,
        WindowBuffer_32_out_o => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_32_out_o,
        WindowBuffer_32_out_o_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_32_out_o_ap_vld,
        data_p_keep_V_3_out => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_data_p_keep_V_3_out,
        data_p_keep_V_3_out_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_data_p_keep_V_3_out_ap_vld,
        data_p_strb_V_3_out => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_data_p_strb_V_3_out,
        data_p_strb_V_3_out_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_data_p_strb_V_3_out_ap_vld);

    CTRL_s_axi_U : component sobel_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        rows => rows,
        cols => cols,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    mux_42_2_1_1_U54 : component sobel_mux_42_2_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 2,
        din2_WIDTH => 2,
        din3_WIDTH => 2,
        din4_WIDTH => 2,
        dout_WIDTH => 2)
    port map (
        din0 => ap_const_lv2_1,
        din1 => ap_const_lv2_2,
        din2 => ap_const_lv2_0,
        din3 => top_V_fu_102,
        din4 => lb_r_i_V_fu_106,
        dout => top_V_1_fu_522_p6);

    mux_42_2_1_1_U55 : component sobel_mux_42_2_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 2,
        din2_WIDTH => 2,
        din3_WIDTH => 2,
        din4_WIDTH => 2,
        dout_WIDTH => 2)
    port map (
        din0 => ap_const_lv2_2,
        din1 => ap_const_lv2_0,
        din2 => ap_const_lv2_1,
        din3 => mid_V_fu_98,
        din4 => lb_r_i_V_fu_106,
        dout => mid_V_1_fu_536_p6);

    mux_42_2_1_1_U56 : component sobel_mux_42_2_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 2,
        din2_WIDTH => 2,
        din3_WIDTH => 2,
        din4_WIDTH => 2,
        dout_WIDTH => 2)
    port map (
        din0 => ap_const_lv2_0,
        din1 => ap_const_lv2_1,
        din2 => ap_const_lv2_2,
        din3 => btm_V_fu_94,
        din4 => lb_r_i_V_fu_106,
        dout => btm_V_1_fu_550_p6);

    regslice_both_src_V_data_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TDATA,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_data_V_U_ack_in,
        data_out => src_TDATA_int_regslice,
        vld_out => src_TVALID_int_regslice,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_data_V_U_apdone_blk);

    regslice_both_src_V_keep_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TKEEP,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_keep_V_U_ack_in,
        data_out => src_TKEEP_int_regslice,
        vld_out => regslice_both_src_V_keep_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_keep_V_U_apdone_blk);

    regslice_both_src_V_strb_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TSTRB,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_strb_V_U_ack_in,
        data_out => src_TSTRB_int_regslice,
        vld_out => regslice_both_src_V_strb_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_strb_V_U_apdone_blk);

    regslice_both_src_V_last_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TLAST,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_last_V_U_ack_in,
        data_out => src_TLAST_int_regslice,
        vld_out => regslice_both_src_V_last_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_last_V_U_apdone_blk);

    regslice_both_dst_V_data_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TDATA,
        vld_in => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TVALID,
        ack_in => dst_TREADY_int_regslice,
        data_out => dst_TDATA,
        vld_out => regslice_both_dst_V_data_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_data_V_U_apdone_blk);

    regslice_both_dst_V_keep_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TKEEP,
        vld_in => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TVALID,
        ack_in => regslice_both_dst_V_keep_V_U_ack_in_dummy,
        data_out => dst_TKEEP,
        vld_out => regslice_both_dst_V_keep_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_keep_V_U_apdone_blk);

    regslice_both_dst_V_strb_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TSTRB,
        vld_in => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TVALID,
        ack_in => regslice_both_dst_V_strb_V_U_ack_in_dummy,
        data_out => dst_TSTRB,
        vld_out => regslice_both_dst_V_strb_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_strb_V_U_apdone_blk);

    regslice_both_dst_V_last_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TLAST,
        vld_in => grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TVALID,
        ack_in => regslice_both_dst_V_last_V_U_ack_in_dummy,
        data_out => dst_TLAST,
        vld_out => regslice_both_dst_V_last_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_sobel_Pipeline_1_fu_366_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sobel_Pipeline_1_fu_366_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_sobel_Pipeline_1_fu_366_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sobel_Pipeline_1_fu_366_ap_ready = ap_const_logic_1)) then 
                    grp_sobel_Pipeline_1_fu_366_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_ready = ap_const_logic_1)) then 
                    grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_ready = ap_const_logic_1)) then 
                    grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    WindowBuffer_18_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (top_V_1_fu_522_p6 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                WindowBuffer_18_reg_305 <= ap_const_lv8_0;
            elsif ((((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (top_V_1_fu_522_p6 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((top_V_1_fu_522_p6 = ap_const_lv2_1)) and not((top_V_1_fu_522_p6 = ap_const_lv2_0)) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                WindowBuffer_18_reg_305 <= WindowBuffer_1_fu_118;
            end if; 
        end if;
    end process;

    WindowBuffer_19_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (top_V_1_fu_522_p6 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                WindowBuffer_19_reg_292 <= ap_const_lv8_0;
            elsif ((((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (top_V_1_fu_522_p6 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((top_V_1_fu_522_p6 = ap_const_lv2_1)) and not((top_V_1_fu_522_p6 = ap_const_lv2_0)) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                WindowBuffer_19_reg_292 <= WindowBuffer_3_fu_126;
            end if; 
        end if;
    end process;

    WindowBuffer_1_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_31_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                WindowBuffer_1_fu_118 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_31_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_sobel_Pipeline_1_fu_366_WindowBuffer_1_out_ap_vld = ap_const_logic_1))) then 
                WindowBuffer_1_fu_118 <= grp_sobel_Pipeline_1_fu_366_WindowBuffer_1_out;
            end if; 
        end if;
    end process;

    WindowBuffer_20_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (top_V_1_fu_522_p6 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (top_V_1_fu_522_p6 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                WindowBuffer_20_reg_279 <= WindowBuffer_5_fu_134;
            elsif ((not((top_V_1_fu_522_p6 = ap_const_lv2_1)) and not((top_V_1_fu_522_p6 = ap_const_lv2_0)) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                WindowBuffer_20_reg_279 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    WindowBuffer_21_reg_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not((btm_V_1_fu_550_p6 = ap_const_lv2_1)) and not((btm_V_1_fu_550_p6 = ap_const_lv2_0)) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((btm_V_1_fu_550_p6 = ap_const_lv2_1) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                WindowBuffer_21_reg_350 <= ap_phi_mux_WindowBuffer_15_phi_fu_267_p6;
            elsif (((btm_V_1_fu_550_p6 = ap_const_lv2_0) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                WindowBuffer_21_reg_350 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    WindowBuffer_22_reg_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((btm_V_1_fu_550_p6 = ap_const_lv2_1) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                WindowBuffer_22_reg_334 <= ap_const_lv8_0;
            elsif (((not((btm_V_1_fu_550_p6 = ap_const_lv2_1)) and not((btm_V_1_fu_550_p6 = ap_const_lv2_0)) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((btm_V_1_fu_550_p6 = ap_const_lv2_0) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                WindowBuffer_22_reg_334 <= ap_phi_mux_WindowBuffer_16_phi_fu_252_p6;
            end if; 
        end if;
    end process;

    WindowBuffer_23_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((btm_V_1_fu_550_p6 = ap_const_lv2_1)) and not((btm_V_1_fu_550_p6 = ap_const_lv2_0)) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                WindowBuffer_23_reg_318 <= ap_const_lv8_0;
            elsif ((((btm_V_1_fu_550_p6 = ap_const_lv2_1) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((btm_V_1_fu_550_p6 = ap_const_lv2_0) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                WindowBuffer_23_reg_318 <= ap_phi_mux_WindowBuffer_17_phi_fu_237_p6;
            end if; 
        end if;
    end process;

    WindowBuffer_2_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_32_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                WindowBuffer_2_fu_122 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_32_out_o;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_sobel_Pipeline_1_fu_366_WindowBuffer_2_out_ap_vld = ap_const_logic_1))) then 
                WindowBuffer_2_fu_122 <= grp_sobel_Pipeline_1_fu_366_WindowBuffer_2_out;
            end if; 
        end if;
    end process;

    WindowBuffer_3_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_33_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                WindowBuffer_3_fu_126 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_33_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_sobel_Pipeline_1_fu_366_WindowBuffer_3_out_ap_vld = ap_const_logic_1))) then 
                WindowBuffer_3_fu_126 <= grp_sobel_Pipeline_1_fu_366_WindowBuffer_3_out;
            end if; 
        end if;
    end process;

    WindowBuffer_4_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_34_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                WindowBuffer_4_fu_130 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_34_out_o;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_sobel_Pipeline_1_fu_366_WindowBuffer_4_out_ap_vld = ap_const_logic_1))) then 
                WindowBuffer_4_fu_130 <= grp_sobel_Pipeline_1_fu_366_WindowBuffer_4_out;
            end if; 
        end if;
    end process;

    WindowBuffer_5_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_35_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                WindowBuffer_5_fu_134 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_35_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_sobel_Pipeline_1_fu_366_WindowBuffer_5_out_ap_vld = ap_const_logic_1))) then 
                WindowBuffer_5_fu_134 <= grp_sobel_Pipeline_1_fu_366_WindowBuffer_5_out;
            end if; 
        end if;
    end process;

    WindowBuffer_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_30_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                WindowBuffer_fu_114 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_WindowBuffer_30_out_o;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_sobel_Pipeline_1_fu_366_WindowBuffer_out_ap_vld = ap_const_logic_1))) then 
                WindowBuffer_fu_114 <= grp_sobel_Pipeline_1_fu_366_WindowBuffer_out;
            end if; 
        end if;
    end process;

    data_p_keep_V_2_reg_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                data_p_keep_V_2_reg_178 <= data_p_keep_V_3_loc_fu_142;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                data_p_keep_V_2_reg_178 <= grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_data_p_keep_V_1_out;
            end if; 
        end if;
    end process;

    data_p_strb_V_2_reg_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                data_p_strb_V_2_reg_188 <= data_p_strb_V_3_loc_fu_138;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                data_p_strb_V_2_reg_188 <= grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_data_p_strb_V_1_out;
            end if; 
        end if;
    end process;

    lb_r_i_V_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                lb_r_i_V_fu_106 <= ap_const_lv2_2;
            elsif (((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                lb_r_i_V_fu_106 <= lb_r_i_V_2_fu_589_p3;
            end if; 
        end if;
    end process;

    row_V_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                row_V_fu_110 <= ap_const_lv13_1;
            elsif (((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                row_V_fu_110 <= row_V_3_fu_597_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                btm_V_1_reg_771 <= btm_V_1_fu_550_p6;
                btm_V_fu_94 <= btm_V_1_fu_550_p6;
                cmp_i_i120_reg_776 <= cmp_i_i120_fu_567_p2;
                cmp_i_i78_reg_781 <= cmp_i_i78_fu_572_p2;
                mid_V_1_reg_766 <= mid_V_1_fu_536_p6;
                mid_V_fu_98 <= mid_V_1_fu_536_p6;
                top_V_1_reg_761 <= top_V_1_fu_522_p6;
                top_V_fu_102 <= top_V_1_fu_522_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                cols_read_reg_709 <= cols;
                rows_read_reg_716 <= rows;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_data_p_keep_V_3_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                data_p_keep_V_3_loc_fu_142 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_data_p_keep_V_3_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_data_p_strb_V_3_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                data_p_strb_V_3_loc_fu_138 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_data_p_strb_V_3_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                op2_assign_reg_753 <= op2_assign_fu_463_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, icmp_ln1027_fu_505_p2, grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state9, regslice_both_dst_V_data_V_U_apdone_blk, ap_block_state3_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state9 => 
                if (((regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;

    LineBuffer_1_address0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_address0, grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LineBuffer_1_address0 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_1_address0 <= grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_address0;
        else 
            LineBuffer_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    LineBuffer_1_ce0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_ce0, grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LineBuffer_1_ce0 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_1_ce0 <= grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_ce0;
        else 
            LineBuffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_1_ce1_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LineBuffer_1_ce1 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_ce1;
        else 
            LineBuffer_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_1_d0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_d0, grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_d0, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LineBuffer_1_d0 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_1_d0 <= grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_d0;
        else 
            LineBuffer_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    LineBuffer_1_we0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_we0, grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LineBuffer_1_we0 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_1_we0 <= grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_1_we0;
        else 
            LineBuffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_address0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_address0, grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_address0, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LineBuffer_address0 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_address0 <= grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_address0;
        else 
            LineBuffer_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    LineBuffer_ce0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_ce0, grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_ce0, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LineBuffer_ce0 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_ce0 <= grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_ce0;
        else 
            LineBuffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_ce1_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LineBuffer_ce1 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_ce1;
        else 
            LineBuffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_d0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_d0, grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_d0, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LineBuffer_d0 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_d0 <= grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_d0;
        else 
            LineBuffer_d0 <= "XXXXXXXX";
        end if; 
    end process;


    LineBuffer_we0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_we0, grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_we0, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LineBuffer_we0 <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_LineBuffer_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_we0 <= grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_LineBuffer_we0;
        else 
            LineBuffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state3_on_subcall_done)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_done)
    begin
        if ((grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state3_on_subcall_done_assign_proc : process(grp_sobel_Pipeline_1_fu_366_ap_done, grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_done)
    begin
                ap_block_state3_on_subcall_done <= ((grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_done = ap_const_logic_0) or (grp_sobel_Pipeline_1_fu_366_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state9, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_WindowBuffer_12_phi_fu_225_p6_assign_proc : process(top_V_1_fu_522_p6, ap_CS_fsm_state5, icmp_ln1027_fu_505_p2, WindowBuffer_fu_114)
    begin
        if ((((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (top_V_1_fu_522_p6 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((top_V_1_fu_522_p6 = ap_const_lv2_1)) and not((top_V_1_fu_522_p6 = ap_const_lv2_0)) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ap_phi_mux_WindowBuffer_12_phi_fu_225_p6 <= WindowBuffer_fu_114;
        elsif (((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (top_V_1_fu_522_p6 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_WindowBuffer_12_phi_fu_225_p6 <= ap_const_lv8_0;
        else 
            ap_phi_mux_WindowBuffer_12_phi_fu_225_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_WindowBuffer_13_phi_fu_213_p6_assign_proc : process(top_V_1_fu_522_p6, ap_CS_fsm_state5, icmp_ln1027_fu_505_p2, WindowBuffer_2_fu_122)
    begin
        if (((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (top_V_1_fu_522_p6 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_WindowBuffer_13_phi_fu_213_p6 <= ap_const_lv8_0;
        elsif ((((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (top_V_1_fu_522_p6 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not((top_V_1_fu_522_p6 = ap_const_lv2_1)) and not((top_V_1_fu_522_p6 = ap_const_lv2_0)) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ap_phi_mux_WindowBuffer_13_phi_fu_213_p6 <= WindowBuffer_2_fu_122;
        else 
            ap_phi_mux_WindowBuffer_13_phi_fu_213_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_WindowBuffer_14_phi_fu_201_p6_assign_proc : process(top_V_1_fu_522_p6, ap_CS_fsm_state5, icmp_ln1027_fu_505_p2, WindowBuffer_4_fu_130)
    begin
        if ((not((top_V_1_fu_522_p6 = ap_const_lv2_1)) and not((top_V_1_fu_522_p6 = ap_const_lv2_0)) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_WindowBuffer_14_phi_fu_201_p6 <= ap_const_lv8_0;
        elsif ((((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (top_V_1_fu_522_p6 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (top_V_1_fu_522_p6 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ap_phi_mux_WindowBuffer_14_phi_fu_201_p6 <= WindowBuffer_4_fu_130;
        else 
            ap_phi_mux_WindowBuffer_14_phi_fu_201_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_WindowBuffer_15_phi_fu_267_p6_assign_proc : process(ap_CS_fsm_state5, icmp_ln1027_fu_505_p2, mid_V_1_fu_536_p6, ap_phi_mux_WindowBuffer_12_phi_fu_225_p6)
    begin
        if (((not((mid_V_1_fu_536_p6 = ap_const_lv2_1)) and not((mid_V_1_fu_536_p6 = ap_const_lv2_0)) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((mid_V_1_fu_536_p6 = ap_const_lv2_1) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ap_phi_mux_WindowBuffer_15_phi_fu_267_p6 <= ap_phi_mux_WindowBuffer_12_phi_fu_225_p6;
        elsif (((mid_V_1_fu_536_p6 = ap_const_lv2_0) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_WindowBuffer_15_phi_fu_267_p6 <= ap_const_lv8_0;
        else 
            ap_phi_mux_WindowBuffer_15_phi_fu_267_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_WindowBuffer_16_phi_fu_252_p6_assign_proc : process(ap_CS_fsm_state5, icmp_ln1027_fu_505_p2, mid_V_1_fu_536_p6, ap_phi_mux_WindowBuffer_13_phi_fu_213_p6)
    begin
        if (((mid_V_1_fu_536_p6 = ap_const_lv2_1) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_WindowBuffer_16_phi_fu_252_p6 <= ap_const_lv8_0;
        elsif (((not((mid_V_1_fu_536_p6 = ap_const_lv2_1)) and not((mid_V_1_fu_536_p6 = ap_const_lv2_0)) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((mid_V_1_fu_536_p6 = ap_const_lv2_0) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ap_phi_mux_WindowBuffer_16_phi_fu_252_p6 <= ap_phi_mux_WindowBuffer_13_phi_fu_213_p6;
        else 
            ap_phi_mux_WindowBuffer_16_phi_fu_252_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_WindowBuffer_17_phi_fu_237_p6_assign_proc : process(ap_CS_fsm_state5, icmp_ln1027_fu_505_p2, mid_V_1_fu_536_p6, ap_phi_mux_WindowBuffer_14_phi_fu_201_p6)
    begin
        if ((not((mid_V_1_fu_536_p6 = ap_const_lv2_1)) and not((mid_V_1_fu_536_p6 = ap_const_lv2_0)) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_WindowBuffer_17_phi_fu_237_p6 <= ap_const_lv8_0;
        elsif ((((mid_V_1_fu_536_p6 = ap_const_lv2_1) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((mid_V_1_fu_536_p6 = ap_const_lv2_0) and (icmp_ln1027_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ap_phi_mux_WindowBuffer_17_phi_fu_237_p6 <= ap_phi_mux_WindowBuffer_14_phi_fu_201_p6;
        else 
            ap_phi_mux_WindowBuffer_17_phi_fu_237_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    cmp_i_i120_fu_567_p2 <= "1" when (signed(zext_ln1027_fu_501_p1) < signed(rows_read_reg_716)) else "0";
    cmp_i_i78_fu_572_p2 <= "1" when (zext_ln1027_fu_501_p1 = rows_read_reg_716) else "0";
    dst_TVALID <= regslice_both_dst_V_data_V_U_vld_out;
    dst_TVALID_int_regslice <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TVALID;
    grp_sobel_Pipeline_1_fu_366_ap_start <= grp_sobel_Pipeline_1_fu_366_ap_start_reg;
    grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_start <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_ap_start_reg;
    grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_dst_TREADY <= (dst_TREADY_int_regslice and ap_CS_fsm_state7);
    grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_start <= grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_ap_start_reg;
    icmp_ln1019_fu_583_p2 <= "1" when (lb_r_i_V_1_fu_577_p2 = ap_const_lv2_3) else "0";
    icmp_ln1027_fu_505_p2 <= "1" when (signed(zext_ln1027_fu_501_p1) > signed(rows_read_reg_716)) else "0";
    lb_r_i_V_1_fu_577_p2 <= std_logic_vector(unsigned(lb_r_i_V_fu_106) + unsigned(ap_const_lv2_1));
    lb_r_i_V_2_fu_589_p3 <= 
        ap_const_lv2_0 when (icmp_ln1019_fu_583_p2(0) = '1') else 
        lb_r_i_V_1_fu_577_p2;
    op2_assign_fu_463_p2 <= std_logic_vector(unsigned(cols_read_reg_709) + unsigned(ap_const_lv32_FFFFFFFF));
    row_V_3_fu_597_p2 <= std_logic_vector(unsigned(row_V_fu_110) + unsigned(ap_const_lv13_1));
    src_TREADY <= regslice_both_src_V_data_V_U_ack_in;

    src_TREADY_int_regslice_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_src_TREADY, grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_src_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            src_TREADY_int_regslice <= grp_sobel_Pipeline_VITIS_LOOP_114_3_fu_393_src_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            src_TREADY_int_regslice <= grp_sobel_Pipeline_VITIS_LOOP_84_1_fu_376_src_TREADY;
        else 
            src_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1027_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_V_fu_110),32));
end behav;
